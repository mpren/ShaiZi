<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.sz.dao.TSTop5Dao">
    <resultMap id="BaseResultMap"
               type="com.test.sz.model.TSTop5">
        <result column="STOCK_CODE" jdbcType="VARCHAR" property="stockCode" />
        <result column="CONTINUE_DAYS" jdbcType="VARCHAR" property="continueDays" />
        <result column="DIE_FU" jdbcType="DECIMAL" property="dieFu" />
        <result column="NEXT_DAY_DIE_FU" jdbcType="DECIMAL" property="nextDayDieFu" />
        <result column="STATISTIC_DATE" jdbcType="VARCHAR" property="statisticDate" />
        <result column="KAI_PAN" jdbcType="DECIMAL" property="kaiPan" />
        <result column="STOCK_NAME" property="stockName" jdbcType="VARCHAR" />
        <result column="ZUO_SHOU" jdbcType="DECIMAL" property="zuoShou" />
        <result column="THE_WAY" jdbcType="VARCHAR" property="theWay" />
        <result column="GAO_KAI" jdbcType="DECIMAL" property="gaoKai" />
        <result column="KDJ" jdbcType="DECIMAL" property="kdj" />
        <result column="TD_RATE" jdbcType="DECIMAL" property="tdRate" />
        <result column="SELL_PRICE" jdbcType="DECIMAL" property="sellPrice" />
        <result column="BUY_PRICE" jdbcType="DECIMAL" property="buyPrice" />
        <result column="GAO_KAI_FROM" jdbcType="VARCHAR" property="gaoKaiFrom" />
        <result column="GAO_KAI_TO" jdbcType="VARCHAR" property="gaoKaiTo" />
        <result column="SD_FROM" jdbcType="VARCHAR" property="sdFrom" />
        <result column="SD_TO" jdbcType="VARCHAR" property="sdTo" />
    </resultMap>

    <resultMap id="SelectResultMap"
               type="com.mpren.automation.deal.stock.domain.TStockSelected">
        <result column="STOCK_CODE" jdbcType="VARCHAR" property="stockCode" />
        <result column="CONTINUE_DAYS" jdbcType="VARCHAR" property="continueDays" />
        <result column="DIE_FU" jdbcType="DECIMAL" property="dieFu" />
        <result column="STATISTIC_DATE" jdbcType="VARCHAR" property="statisticDate" />
        <result column="PERCENT_MAX" jdbcType="VARCHAR" property="percentMax" />
        <result column="MAX_CJL" jdbcType="VARCHAR" property="maxCjl" />
        <result column="NEI_PAN" jdbcType="DECIMAL" property="neiPan" />
        <result column="WAI_PAN" jdbcType="VARCHAR" property="waiPan" />
        <result column="COMPARE_PAN" jdbcType="VARCHAR" property="comparePan" />
        <result column="AVG_MAX" jdbcType="VARCHAR" property="avgMax" />
    </resultMap>

    <resultMap id="ZhousiResultMap"
               type="com.mpren.automation.deal.s.statistic.domain.TSzhousi">
        <result column="DIE_FU" jdbcType="DECIMAL" property="dieFu" />
        <result column="STATISTIC_DATE" jdbcType="VARCHAR" property="statisticDate" />
        <result column="ZH_NAME" jdbcType="VARCHAR" property="zhName" />
    </resultMap>

    <resultMap id="ScatterPlotResultMap"
               type="com.mpren.automation.deal.s.statistic.domain.TScatterPlot">
        <result column="PRICE" jdbcType="DECIMAL" property="price" />
        <result column="KDJ" jdbcType="DECIMAL" property="kdj" />
        <result column="DIE_FU" jdbcType="DECIMAL" property="dieFu" />
        <result column="ZHANG_FU" jdbcType="DECIMAL" property="zhangFu" />
        <result column="TYPE" jdbcType="VARCHAR" property="type" />
        <result column="GAO_KAI" jdbcType="DECIMAL" property="gaoKai" />
    </resultMap>

    <resultMap id="ZhangNumResultMap"
               type="com.mpren.automation.deal.s.statistic.domain.TSzhangnum">
        <result column="ZHANG_NUM" jdbcType="DECIMAL" property="zhangNum" />
        <result column="STATISTIC_DATE" jdbcType="VARCHAR" property="statisticDate" />
        <result column="SZ_CJL" jdbcType="VARCHAR" property="szCjl" />
        <result column="TOTAL_NUM" jdbcType="VARCHAR" property="totalNum" />
    </resultMap>

    <insert id="insert" parameterType="com.mpren.automation.deal.stock.domain.TStockTop3">
        insert into T_STOCK_TOP3 (STOCK_CODE, CONTINUE_DAYS, DIE_FU,
        NEXT_DAY_DIE_FU, STATISTIC_DATE, KAI_PAN,STOCK_NAME,ZUO_SHOU,THE_WAY
        )
        values (#{stockCode,jdbcType=VARCHAR}, #{continueDays,jdbcType=VARCHAR},
        #{dieFu,jdbcType=DECIMAL},
        #{nextDayDieFu,jdbcType=DECIMAL}, #{statisticDate,jdbcType=VARCHAR}, #{kaiPan,jdbcType=DECIMAL},
        #{stockName,jdbcType=DECIMAL},#{zuoShou,jdbcType=VARCHAR},#{theWay,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.mpren.automation.deal.stock.domain.TStockTop3">
        insert into T_STOCK_TOP3
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stockCode != null">
                STOCK_CODE,
            </if>
            <if test="continueDays != null">
                CONTINUE_DAYS,
            </if>
            <if test="dieFu != null">
                DIE_FU,
            </if>
            <if test="nextDayDieFu != null">
                NEXT_DAY_DIE_FU,
            </if>
            <if test="statisticDate != null">
                STATISTIC_DATE,
            </if>
            <if test="kaiPan != null">
                KAI_PAN,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stockCode != null">
                #{stockCode,jdbcType=VARCHAR},
            </if>
            <if test="continueDays != null">
                #{continueDays,jdbcType=VARCHAR},
            </if>
            <if test="dieFu != null">
                #{dieFu,jdbcType=DECIMAL},
            </if>
            <if test="nextDayDieFu != null">
                #{nextDayDieFu,jdbcType=DECIMAL},
            </if>
            <if test="statisticDate != null">
                #{statisticDate,jdbcType=VARCHAR},
            </if>
            <if test="kaiPan != null">
                #{kaiPan,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="queryTop5Over" resultMap="BaseResultMap"
            parameterType="com.mpren.automation.deal.stock.domain.TStockTop3">
        select *
        from (with tt as (SELECT t.stock_code,
        count(*) as CONTINUE_DAYS,
        sum(t.zhang_fu_lv) as die_fu
        FROM T_STOCK_INFO t
        where t.zhang_fu_lv <![CDATA[ <  ]]>
        0
        and t.dealed_date <![CDATA[ >=  ]]>
        (select *
        from (select *
        from (select d.deal_date
        from t_s_date d
        order by d.date_id desc)
        where ROWNUM <![CDATA[ <= ]]>
        5
        order by deal_date asc)
        where ROWNUM <![CDATA[ <= ]]>
        1)
        group by t.stock_code, t.stock_name
        order by CONTINUE_DAYS desc, die_fu asc)
        select tt.*,
        t.today_price as ZUO_SHOU,
        to_char(sysdate, 'yyyyMMdd') as STATISTIC_DATE,
        t.stock_name
        from tt, T_STOCK_INFO t
        where tt.stock_code = t.stock_code(+)
        and to_char(sysdate, 'yyyyMMdd') = t.dealed_date
        order by CONTINUE_DAYS desc, die_fu asc) ttt
        where rownum <![CDATA[ <  ]]>
        6
    </select>
    <select id="query" resultMap="BaseResultMap"
            parameterType="com.mpren.automation.deal.stock.domain.TStockTop3">
        SELECT * FROM T_STOCK_TOP3 t
        <where>
            <if test="stockCode != null and stockCode !=''">
                and t.STOCK_CODE = #{stockCode,jdbcType=VARCHAR}
            </if>
            <if test="statisticDate != null and statisticDate !=''">
                and t.STATISTIC_DATE = #{statisticDate,jdbcType=VARCHAR}
            </if>
            <if test="theWay != null and theWay !=''">
                and t.THE_WAY = #{theWay,jdbcType=VARCHAR}
            </if>
            <if test="gaoKaiFrom != null and gaoKaiFrom !=''">
                and t.GAO_KAI <![CDATA[ >  ]]> #{gaoKaiFrom,jdbcType=VARCHAR}
            </if>
            <if test="gaoKaiTo != null and gaoKaiTo !=''">
                and t.GAO_KAI <![CDATA[ <  ]]> #{gaoKaiTo,jdbcType=VARCHAR}
            </if>
            <if test="sdFrom != null and sdFrom !=''">
                and t.STATISTIC_DATE <![CDATA[ >=  ]]> #{sdFrom,jdbcType=VARCHAR}
            </if>
            <if test="sdTo != null and sdTo !=''">
                and t.STATISTIC_DATE <![CDATA[ <=  ]]> #{sdTo,jdbcType=VARCHAR}
            </if>
        </where>
        order by STATISTIC_DATE DESC
    </select>
    <select id="queryTop5Max" resultMap="BaseResultMap"
            parameterType="com.mpren.automation.deal.stock.domain.TStockTop3">
        SELECT *
        FROM T_STOCK_TOP3
        where T_STOCK_TOP3.Statistic_Date =
        (SELECT max(t.statistic_date) FROM T_STOCK_TOP3 t)
    </select>
    <select id="selectedBest" resultMap="SelectResultMap"
            parameterType="com.mpren.automation.deal.stock.domain.TStockTop3">
        WITH TTT AS
        (select T_STOCK_CJL.PERCENT_MAX,
        T_STOCK_CJL.MAX_CJL,
        TOP3.STOCK_CODE,
        TOP3.STATISTIC_DATE,
        T_STOCK_INFO.NEI_PAN,
        T_STOCK_INFO.WAI_PAN,
        TOP3.die_fu,
        TOP3.CONTINUE_DAYS,
        trunc(T_STOCK_INFO.NEI_PAN / T_STOCK_INFO.WAI_PAN, 2) as COMPARE_PAN
        from T_STOCK_CJL,
        (select tt.*,
        t.today_price as ZUO_SHOU,
        to_char(sysdate, 'yyyyMMdd') as STATISTIC_DATE
        from (SELECT t.stock_code,
        t.stock_name,
        count(*) as CONTINUE_DAYS,
        sum(t.zhang_fu_lv) as die_fu
        FROM T_STOCK_INFO t
        where t.zhang_fu_lv <![CDATA[ <  ]]>
        0
        and t.dealed_date <![CDATA[ >  ]]>
        (select *
        from (select *
        from (select d.deal_date
        from t_s_date d
        order by d.date_id desc)
        where ROWNUM <![CDATA[ <= ]]>
        5
        order by deal_date asc)
        where ROWNUM <![CDATA[ <= ]]>
        1)
        group by t.stock_code, t.stock_name
        order by CONTINUE_DAYS desc, die_fu asc) tt,
        T_STOCK_INFO t
        where tt.stock_code = t.stock_code(+)
        and to_char(sysdate, 'yyyyMMdd') = t.dealed_date
        and rownum <![CDATA[ <  ]]>
        6
        order by CONTINUE_DAYS desc, die_fu asc) TOP3,
        T_STOCK_INFO
        where T_STOCK_CJL.STATISTIC_DATE = TOP3.STATISTIC_DATE(+)
        AND T_STOCK_CJL.STATISTIC_DATE = T_STOCK_INFO.DEALED_DATE(+)
        AND T_STOCK_CJL.STOCK_CODE = TOP3.STOCK_CODE
        AND T_STOCK_CJL.STOCK_CODE = T_STOCK_INFO.STOCK_CODE)
        SELECT TTT.*,(select avg(TTT.PERCENT_MAX) from TTT) AVG_MAX
        FROM TTT
        order by CONTINUE_DAYS desc, die_fu asc
    </select>
    <update id="updateByPrimaryKey" parameterType="java.lang.String">
        update T_STOCK_TOP3
        <set>
            <if test="nextDayDieFu != null">
                NEXT_DAY_DIE_FU = #{nextDayDieFu,jdbcType=DECIMAL},
            </if>
            <if test="kaiPan != null">
                KAI_PAN = #{kaiPan,jdbcType=DECIMAL},
            </if>
        </set>
        where STOCK_CODE = #{stockCode,jdbcType=VARCHAR} and STATISTIC_DATE =
        #{statisticDate,jdbcType=VARCHAR}
    </update>
    <update id="updateTop3Gaokai" parameterType="java.lang.String">
        update T_STOCK_TOP3 tt set tt.gao_kai = trunc((tt.kai_pan -
        tt.zuo_shou)/tt.zuo_shou*100, 2)
    </update>
    <update id="updateTD" parameterType="java.lang.String">
        update t_stock_top3
        set
        t_stock_top3.third_day =
        (select ttt.jin_kai
        from (select *
        from (select
        t_stock_info.stock_code,
        t_stock_info.jin_kai,
        t_s_date.date_id
        from
        t_stock_info, t_s_date
        where t_stock_info.dealed_date =
        t_s_date.deal_date) tt,
        t_s_date
        where tt.date_id -2 = t_s_date.date_id)
        ttt
        where ttt.deal_date = t_stock_top3.statistic_date
        and
        t_stock_top3.stock_code = ttt.stock_code)
    </update>

    <update id="updateTDR" parameterType="java.lang.String">
        update t_stock_top3
        set t_stock_top3.td_rate =
        (select (t_stock_top3.third_day -ttt.today_price)/ttt.today_price*100
        from (select *
        from (select t_stock_info.stock_code,
        t_stock_info.today_price,
        t_s_date.date_id
        from t_stock_info, t_s_date
        where t_stock_info.dealed_date = t_s_date.deal_date) tt,
        t_s_date
        where tt.date_id -1 = t_s_date.date_id) ttt
        where ttt.deal_date = t_stock_top3.statistic_date
        and t_stock_top3.stock_code = ttt.stock_code)
    </update>

    <select id="queryZhousi" resultMap="ZhousiResultMap"
            parameterType="com.mpren.automation.deal.s.statistic.domain.TSzhousi">
        SELECT * FROM (select t_stock_top3.statistic_date,
        sum(t_stock_top3.die_fu) die_fu,'DF' ZH_NAME
        from t_stock_top3
        group by t_stock_top3.statistic_date )
        union
        (select t_stock_top3.statistic_date, sum(t_stock_top3.continue_days)*-10
        die_fu,'CX' ZH_NAME
        from t_stock_top3
        group by t_stock_top3.statistic_date )
        union
        (select t_stock_top3.statistic_date, sum(t_stock_top3.next_day_die_fu) die_fu
        ,'NDF' ZH_NAME
        from t_stock_top3
        WHERE t_stock_top3.Continue_Days <![CDATA[ >  ]]>4
        AND t_stock_top3.Die_Fu <![CDATA[ <  ]]>-10
        group by t_stock_top3.statistic_date )
    </select>
    <select id="queryScatterPlot" resultMap="ScatterPlotResultMap"
            parameterType="com.mpren.automation.deal.s.statistic.domain.TScatterPlot">
        select (T.NEXT_DAY_DIE_FU - T.GAO_KAI) ZHANG_FU, T.KAI_PAN
        PRICE,T.KDJ,T.GAO_KAI,T.DIE_FU,
        CASE WHEN (T.NEXT_DAY_DIE_FU - T.GAO_KAI) <![CDATA[>=]]>
        0 THEN 'UP'
        WHEN (T.NEXT_DAY_DIE_FU - T.GAO_KAI) <![CDATA[<]]>
        0 THEN 'DOWN'
        ELSE '其他' END TYPE
        from T_STOCK_TOP3 t
        WHERE T.KAI_PAN <![CDATA[<>]]>0
    </select>
    <select id="queryZhangNum" resultMap="ZhangNumResultMap"
            parameterType="com.mpren.automation.deal.s.statistic.domain.TSzhangnum">
        select tt.statistic_date,
        CASE
        WHEN ttt.zhang_num is null THEN
        0
        ELSE
        ttt.zhang_num
        END zhang_num,
        'up_snum' sz_cjl
        from (select t.statistic_date
        from T_STOCK_TOP3 t
        group by t.statistic_date) tt
        left join (select t.statistic_date, count(0) zhang_num
        from T_STOCK_TOP3 t
        where (t.next_day_die_fu - t.gao_kai)<![CDATA[>]]> 0
        group by t.statistic_date
        order by t.statistic_date asc) ttt
        on tt.statistic_date = ttt.statistic_date
        order by tt.statistic_date asc
    </select>
    <select id="queryKaipanDapan" resultMap="SelectResultMap"
            parameterType="com.mpren.automation.deal.stock.domain.TStockTop3">
        select DISTINCT (select count(*)
        from (select info.zhang_fu_lv, t.statistic_date, t.gaokai
        from (SELECT *
        FROM (SELECT T1.*, T_S_DATE.DATE_ID
        FROM (select t_stock_top3.statistic_date,
        sum(t_stock_top3.gao_kai) gaokai
        from t_stock_top3
        group by t_stock_top3.statistic_date) T1,
        T_S_DATE
        WHERE T1.statistic_date = T_S_DATE.DEAL_DATE) T2,
        T_S_DATE
        WHERE T2.DATE_ID + 1 = T_S_DATE.DATE_ID) t,
        t_stock_info info
        where info.dealed_date = t.deal_date
        and info.stock_code = 'sh000001') tt
        where tt.gaokai <![CDATA[<]]> 10
        and tt.gaokai <![CDATA[>]]> 2
        and tt.zhang_fu_lv <![CDATA[>]]> 0) NEI_PAN
        ,(select count(*)
        from (select info.zhang_fu_lv, t.statistic_date, t.gaokai
        from (SELECT *
        FROM (SELECT T1.*, T_S_DATE.DATE_ID
        FROM (select t_stock_top3.statistic_date,
        sum(t_stock_top3.gao_kai) gaokai
        from t_stock_top3
        group by t_stock_top3.statistic_date) T1,
        T_S_DATE
        WHERE T1.statistic_date = T_S_DATE.DEAL_DATE) T2,
        T_S_DATE
        WHERE T2.DATE_ID + 1 = T_S_DATE.DATE_ID) t,
        t_stock_info info
        where info.dealed_date = t.deal_date
        and info.stock_code = 'sh000001') tt
        where tt.gaokai <![CDATA[<]]> 10
        and tt.gaokai <![CDATA[>]]> 2
        and tt.zhang_fu_lv <![CDATA[<]]> 0) WAI_PAN from t_stock_top3
    </select>
    <select id="queryProbZhangnum" resultMap="ZhangNumResultMap"
            parameterType="com.mpren.automation.deal.stock.domain.TStockTop3">
        with tab as
        (select tt.statistic_date,
        CASE
        WHEN ttt.zhang_num is null THEN
        0
        ELSE
        ttt.zhang_num
        END zhang_num
        from (select t.statistic_date
        from T_STOCK_TOP3 t
        group by t.statistic_date) tt
        left join (select t.statistic_date, count(0) zhang_num
        from T_STOCK_TOP3 t
        where (t.next_day_die_fu - t.gao_kai) <![CDATA[>]]> 0
        group by t.statistic_date
        order by t.statistic_date asc) ttt
        on tt.statistic_date = ttt.statistic_date
        order by tt.statistic_date asc)
        select *
        from (select tab.zhang_num, count(*) TOTAL_NUM, '4' SZ_CJL
        from tab
        where tab.statistic_date in
        (SELECT *
        FROM (select t_s_date.deal_date
        from (select *
        from tab, t_s_date
        where tab.statistic_date = t_s_date.deal_date
        and tab.zhang_num = 4) tttt,
        t_s_date
        where tttt.date_id + 1 = t_s_date.date_id))
        group by tab.zhang_num)
        union (select tab.zhang_num, count(*) TOTAL_NUM, '5' SZ_CJL
        from tab
        where tab.statistic_date in
        (SELECT *
        FROM (select t_s_date.deal_date
        from (select *
        from tab, t_s_date
        where tab.statistic_date = t_s_date.deal_date
        and tab.zhang_num = 5) tttt,
        t_s_date
        where tttt.date_id + 1 = t_s_date.date_id))
        group by tab.zhang_num)
        union (select tab.zhang_num, count(*) TOTAL_NUM, '3' SZ_CJL
        from tab
        where tab.statistic_date in
        (SELECT *
        FROM (select t_s_date.deal_date
        from (select *
        from tab, t_s_date
        where tab.statistic_date = t_s_date.deal_date
        and tab.zhang_num = 3) tttt,
        t_s_date
        where tttt.date_id + 1 = t_s_date.date_id))
        group by tab.zhang_num)
        union (select tab.zhang_num, count(*) TOTAL_NUM, '2' SZ_CJL
        from tab
        where tab.statistic_date in
        (SELECT *
        FROM (select t_s_date.deal_date
        from (select *
        from tab, t_s_date
        where tab.statistic_date = t_s_date.deal_date
        and tab.zhang_num = 2) tttt,
        t_s_date
        where tttt.date_id + 1 = t_s_date.date_id))
        group by tab.zhang_num)
        union (select tab.zhang_num, count(*) TOTAL_NUM, '1' SZ_CJL
        from tab
        where tab.statistic_date in
        (SELECT *
        FROM (select t_s_date.deal_date
        from (select *
        from tab, t_s_date
        where tab.statistic_date = t_s_date.deal_date
        and tab.zhang_num = 1) tttt,
        t_s_date
        where tttt.date_id + 1 = t_s_date.date_id))
        group by tab.zhang_num)
        union (select tab.zhang_num, count(*) TOTAL_NUM, '0' SZ_CJL
        from tab
        where tab.statistic_date in
        (SELECT *
        FROM (select t_s_date.deal_date
        from (select *
        from tab, t_s_date
        where tab.statistic_date = t_s_date.deal_date
        and tab.zhang_num = 0) tttt,
        t_s_date
        where tttt.date_id + 1 = t_s_date.date_id))
        group by tab.zhang_num)
        order by SZ_CJL desc
    </select>
</mapper>
